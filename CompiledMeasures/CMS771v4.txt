=============================================================================================================================================================================
Initial Population:
( exists [("Patient Characteristic Sex: Male" using "Male (AdministrativeGender Code M)")] )
  and exists [("Encounter, Performed: Office Visit" using "Office Visit (2.16.840.1.113883.3.464.1003.101.12.1001)")] ValidEncounter
  where ValidEncounter.relevantPeriod during Measurement Period
    and ValidEncounter.class !~ (code "virtual" ("ActCode Code (VR)"))
  and First([("Diagnosis: Benign prostatic hyperplasia with lower urinary tract symptoms" using "Benign prostatic hyperplasia with lower urinary tract symptoms (ICD10CM Code N40.1)")] NewBPHDiagnosis
    where NewBPHDiagnosis.prevalencePeriod starts during Interval[start of Measurement Period - 6 months, 
    end of Measurement Period]
    sort by start of prevalencePeriod
) is not null
  and First([("Assessment, Performed: International Prostate Symptom Score [IPSS]" using "International Prostate Symptom Score [IPSS] (LOINC Code 80976-4)")] IPSSAssessment
  where IPSSAssessment.result is not null
  return {
    assessmentDatetime: Global.EarliestOf ( IPSSAssessment.relevantDatetime, IPSSAssessment.relevantPeriod ),
    result: IPSSAssessment.result as Integer
  }
  union [("Assessment, Performed: American Urological Association Symptom Index [AUASI]" using "American Urological Association Symptom Index [AUASI] (LOINC Code 80883-2)")] AUASIAssessment
  let LastQOLOnDate: Last([("Assessment, Performed: If you were to spend the rest of your life with your urinary condition just the way it is now, how would you feel about that [IPSS]" using "If you were to spend the rest of your life with your urinary condition just the way it is now, how would you feel about that [IPSS] (LOINC Code 81090-3)")] QOLAssessment
      where Global.EarliestOf(QOLAssessment.relevantDatetime, QOLAssessment.relevantPeriod)same day as Global.EarliestOf(AUASIAssessment.relevantDatetime, AUASIAssessment.relevantPeriod)
        and QOLAssessment.result is not null
      sort by Global.EarliestOf(relevantDatetime, relevantPeriod)
  )
  where AUASIAssessment.result is not null
    and LastQOLOnDate.result is not null
  return Tuple {
    assessmentDatetime: Global.EarliestOf ( AUASIAssessment.relevantDatetime, AUASIAssessment.relevantPeriod ),
    result: ( AUASIAssessment.result as Integer ) + ( LastQOLOnDate.result as Integer )
  } USSAssessment
    with First([("Diagnosis: Benign prostatic hyperplasia with lower urinary tract symptoms" using "Benign prostatic hyperplasia with lower urinary tract symptoms (ICD10CM Code N40.1)")] NewBPHDiagnosis
    where NewBPHDiagnosis.prevalencePeriod starts during Interval[start of Measurement Period - 6 months, 
    end of Measurement Period]
    sort by start of prevalencePeriod
) InitialBPHDiagnosis
      such that USSAssessment.assessmentDatetime 1 month or less on or after day of start of InitialBPHDiagnosis.prevalencePeriod
    sort by assessmentDatetime
) is not null
  and Last([("Assessment, Performed: International Prostate Symptom Score [IPSS]" using "International Prostate Symptom Score [IPSS] (LOINC Code 80976-4)")] IPSSAssessment
  where IPSSAssessment.result is not null
  return {
    assessmentDatetime: Global.EarliestOf ( IPSSAssessment.relevantDatetime, IPSSAssessment.relevantPeriod ),
    result: IPSSAssessment.result as Integer
  }
  union [("Assessment, Performed: American Urological Association Symptom Index [AUASI]" using "American Urological Association Symptom Index [AUASI] (LOINC Code 80883-2)")] AUASIAssessment
  let LastQOLOnDate: Last([("Assessment, Performed: If you were to spend the rest of your life with your urinary condition just the way it is now, how would you feel about that [IPSS]" using "If you were to spend the rest of your life with your urinary condition just the way it is now, how would you feel about that [IPSS] (LOINC Code 81090-3)")] QOLAssessment
      where Global.EarliestOf(QOLAssessment.relevantDatetime, QOLAssessment.relevantPeriod)same day as Global.EarliestOf(AUASIAssessment.relevantDatetime, AUASIAssessment.relevantPeriod)
        and QOLAssessment.result is not null
      sort by Global.EarliestOf(relevantDatetime, relevantPeriod)
  )
  where AUASIAssessment.result is not null
    and LastQOLOnDate.result is not null
  return Tuple {
    assessmentDatetime: Global.EarliestOf ( AUASIAssessment.relevantDatetime, AUASIAssessment.relevantPeriod ),
    result: ( AUASIAssessment.result as Integer ) + ( LastQOLOnDate.result as Integer )
  } USSAssessment
    with First([("Diagnosis: Benign prostatic hyperplasia with lower urinary tract symptoms" using "Benign prostatic hyperplasia with lower urinary tract symptoms (ICD10CM Code N40.1)")] NewBPHDiagnosis
    where NewBPHDiagnosis.prevalencePeriod starts during Interval[start of Measurement Period - 6 months, 
    end of Measurement Period]
    sort by start of prevalencePeriod
) InitialBPHDiagnosis
      such that months between start of InitialBPHDiagnosis.prevalencePeriod and USSAssessment.assessmentDatetime in Interval[6, 12]
    sort by assessmentDatetime
) is not null
=============================================================================================================================================================================
Denominator:
( exists [("Patient Characteristic Sex: Male" using "Male (AdministrativeGender Code M)")] )
  and exists [("Encounter, Performed: Office Visit" using "Office Visit (2.16.840.1.113883.3.464.1003.101.12.1001)")] ValidEncounter
  where ValidEncounter.relevantPeriod during Measurement Period
    and ValidEncounter.class !~ (code "virtual" ("ActCode Code (VR)"))
  and First([("Diagnosis: Benign prostatic hyperplasia with lower urinary tract symptoms" using "Benign prostatic hyperplasia with lower urinary tract symptoms (ICD10CM Code N40.1)")] NewBPHDiagnosis
    where NewBPHDiagnosis.prevalencePeriod starts during Interval[start of Measurement Period - 6 months, 
    end of Measurement Period]
    sort by start of prevalencePeriod
) is not null
  and First([("Assessment, Performed: International Prostate Symptom Score [IPSS]" using "International Prostate Symptom Score [IPSS] (LOINC Code 80976-4)")] IPSSAssessment
  where IPSSAssessment.result is not null
  return {
    assessmentDatetime: Global.EarliestOf ( IPSSAssessment.relevantDatetime, IPSSAssessment.relevantPeriod ),
    result: IPSSAssessment.result as Integer
  }
  union [("Assessment, Performed: American Urological Association Symptom Index [AUASI]" using "American Urological Association Symptom Index [AUASI] (LOINC Code 80883-2)")] AUASIAssessment
  let LastQOLOnDate: Last([("Assessment, Performed: If you were to spend the rest of your life with your urinary condition just the way it is now, how would you feel about that [IPSS]" using "If you were to spend the rest of your life with your urinary condition just the way it is now, how would you feel about that [IPSS] (LOINC Code 81090-3)")] QOLAssessment
      where Global.EarliestOf(QOLAssessment.relevantDatetime, QOLAssessment.relevantPeriod)same day as Global.EarliestOf(AUASIAssessment.relevantDatetime, AUASIAssessment.relevantPeriod)
        and QOLAssessment.result is not null
      sort by Global.EarliestOf(relevantDatetime, relevantPeriod)
  )
  where AUASIAssessment.result is not null
    and LastQOLOnDate.result is not null
  return Tuple {
    assessmentDatetime: Global.EarliestOf ( AUASIAssessment.relevantDatetime, AUASIAssessment.relevantPeriod ),
    result: ( AUASIAssessment.result as Integer ) + ( LastQOLOnDate.result as Integer )
  } USSAssessment
    with First([("Diagnosis: Benign prostatic hyperplasia with lower urinary tract symptoms" using "Benign prostatic hyperplasia with lower urinary tract symptoms (ICD10CM Code N40.1)")] NewBPHDiagnosis
    where NewBPHDiagnosis.prevalencePeriod starts during Interval[start of Measurement Period - 6 months, 
    end of Measurement Period]
    sort by start of prevalencePeriod
) InitialBPHDiagnosis
      such that USSAssessment.assessmentDatetime 1 month or less on or after day of start of InitialBPHDiagnosis.prevalencePeriod
    sort by assessmentDatetime
) is not null
  and Last([("Assessment, Performed: International Prostate Symptom Score [IPSS]" using "International Prostate Symptom Score [IPSS] (LOINC Code 80976-4)")] IPSSAssessment
  where IPSSAssessment.result is not null
  return {
    assessmentDatetime: Global.EarliestOf ( IPSSAssessment.relevantDatetime, IPSSAssessment.relevantPeriod ),
    result: IPSSAssessment.result as Integer
  }
  union [("Assessment, Performed: American Urological Association Symptom Index [AUASI]" using "American Urological Association Symptom Index [AUASI] (LOINC Code 80883-2)")] AUASIAssessment
  let LastQOLOnDate: Last([("Assessment, Performed: If you were to spend the rest of your life with your urinary condition just the way it is now, how would you feel about that [IPSS]" using "If you were to spend the rest of your life with your urinary condition just the way it is now, how would you feel about that [IPSS] (LOINC Code 81090-3)")] QOLAssessment
      where Global.EarliestOf(QOLAssessment.relevantDatetime, QOLAssessment.relevantPeriod)same day as Global.EarliestOf(AUASIAssessment.relevantDatetime, AUASIAssessment.relevantPeriod)
        and QOLAssessment.result is not null
      sort by Global.EarliestOf(relevantDatetime, relevantPeriod)
  )
  where AUASIAssessment.result is not null
    and LastQOLOnDate.result is not null
  return Tuple {
    assessmentDatetime: Global.EarliestOf ( AUASIAssessment.relevantDatetime, AUASIAssessment.relevantPeriod ),
    result: ( AUASIAssessment.result as Integer ) + ( LastQOLOnDate.result as Integer )
  } USSAssessment
    with First([("Diagnosis: Benign prostatic hyperplasia with lower urinary tract symptoms" using "Benign prostatic hyperplasia with lower urinary tract symptoms (ICD10CM Code N40.1)")] NewBPHDiagnosis
    where NewBPHDiagnosis.prevalencePeriod starts during Interval[start of Measurement Period - 6 months, 
    end of Measurement Period]
    sort by start of prevalencePeriod
) InitialBPHDiagnosis
      such that months between start of InitialBPHDiagnosis.prevalencePeriod and USSAssessment.assessmentDatetime in Interval[6, 12]
    sort by assessmentDatetime
) is not null
=============================================================================================================================================================================
Denominator Exclusions:
exists ( [("Diagnosis: Urinary retention" using "Urinary retention (2.16.840.1.113762.1.4.1164.52)")] UrinaryRetention
  with First([("Diagnosis: Benign prostatic hyperplasia with lower urinary tract symptoms" using "Benign prostatic hyperplasia with lower urinary tract symptoms (ICD10CM Code N40.1)")] NewBPHDiagnosis
    where NewBPHDiagnosis.prevalencePeriod starts during Interval[start of Measurement Period - 6 months, 
    end of Measurement Period]
    sort by start of prevalencePeriod
) InitialBPHDiagnosis
    such that UrinaryRetention.prevalencePeriod starts 1 year or less on or after day of start of InitialBPHDiagnosis.prevalencePeriod )
  or ( First([("Diagnosis: Benign prostatic hyperplasia with lower urinary tract symptoms" using "Benign prostatic hyperplasia with lower urinary tract symptoms (ICD10CM Code N40.1)")] NewBPHDiagnosis
    where NewBPHDiagnosis.prevalencePeriod starts during Interval[start of Measurement Period - 6 months, 
    end of Measurement Period]
    sort by start of prevalencePeriod
) InitialBPHDiagnosis
  with [("Encounter, Performed: Hospital Services for urology care" using "Hospital Services for urology care (2.16.840.1.113762.1.4.1164.64)")] InHospitalServices
    such that InitialBPHDiagnosis.prevalencePeriod starts during Interval[start of InHospitalServices.relevantPeriod, 
    end of InHospitalServices.relevantPeriod + 31 days ) is not null )
  or ( exists [("Diagnosis: Morbid Obesity" using "Morbid Obesity (2.16.840.1.113762.1.4.1164.67)")] MorbidObesity
  with Last([("Assessment, Performed: International Prostate Symptom Score [IPSS]" using "International Prostate Symptom Score [IPSS] (LOINC Code 80976-4)")] IPSSAssessment
  where IPSSAssessment.result is not null
  return {
    assessmentDatetime: Global.EarliestOf ( IPSSAssessment.relevantDatetime, IPSSAssessment.relevantPeriod ),
    result: IPSSAssessment.result as Integer
  }
  union [("Assessment, Performed: American Urological Association Symptom Index [AUASI]" using "American Urological Association Symptom Index [AUASI] (LOINC Code 80883-2)")] AUASIAssessment
  let LastQOLOnDate: Last([("Assessment, Performed: If you were to spend the rest of your life with your urinary condition just the way it is now, how would you feel about that [IPSS]" using "If you were to spend the rest of your life with your urinary condition just the way it is now, how would you feel about that [IPSS] (LOINC Code 81090-3)")] QOLAssessment
      where Global.EarliestOf(QOLAssessment.relevantDatetime, QOLAssessment.relevantPeriod)same day as Global.EarliestOf(AUASIAssessment.relevantDatetime, AUASIAssessment.relevantPeriod)
        and QOLAssessment.result is not null
      sort by Global.EarliestOf(relevantDatetime, relevantPeriod)
  )
  where AUASIAssessment.result is not null
    and LastQOLOnDate.result is not null
  return Tuple {
    assessmentDatetime: Global.EarliestOf ( AUASIAssessment.relevantDatetime, AUASIAssessment.relevantPeriod ),
    result: ( AUASIAssessment.result as Integer ) + ( LastQOLOnDate.result as Integer )
  } USSAssessment
    with First([("Diagnosis: Benign prostatic hyperplasia with lower urinary tract symptoms" using "Benign prostatic hyperplasia with lower urinary tract symptoms (ICD10CM Code N40.1)")] NewBPHDiagnosis
    where NewBPHDiagnosis.prevalencePeriod starts during Interval[start of Measurement Period - 6 months, 
    end of Measurement Period]
    sort by start of prevalencePeriod
) InitialBPHDiagnosis
      such that months between start of InitialBPHDiagnosis.prevalencePeriod and USSAssessment.assessmentDatetime in Interval[6, 12]
    sort by assessmentDatetime
) FollowUpUSSAssessment
    such that MorbidObesity.prevalencePeriod overlaps Measurement Period
      and MorbidObesity.prevalencePeriod starts on or before FollowUpUSSAssessment.assessmentDatetime
  or Exists([("Physical Exam, Performed: Body mass index (BMI) [Ratio]" using "Body mass index (BMI) [Ratio] (LOINC Code 39156-5)")] BMIExam
    with Last([("Assessment, Performed: International Prostate Symptom Score [IPSS]" using "International Prostate Symptom Score [IPSS] (LOINC Code 80976-4)")] IPSSAssessment
  where IPSSAssessment.result is not null
  return {
    assessmentDatetime: Global.EarliestOf ( IPSSAssessment.relevantDatetime, IPSSAssessment.relevantPeriod ),
    result: IPSSAssessment.result as Integer
  }
  union [("Assessment, Performed: American Urological Association Symptom Index [AUASI]" using "American Urological Association Symptom Index [AUASI] (LOINC Code 80883-2)")] AUASIAssessment
  let LastQOLOnDate: Last([("Assessment, Performed: If you were to spend the rest of your life with your urinary condition just the way it is now, how would you feel about that [IPSS]" using "If you were to spend the rest of your life with your urinary condition just the way it is now, how would you feel about that [IPSS] (LOINC Code 81090-3)")] QOLAssessment
      where Global.EarliestOf(QOLAssessment.relevantDatetime, QOLAssessment.relevantPeriod)same day as Global.EarliestOf(AUASIAssessment.relevantDatetime, AUASIAssessment.relevantPeriod)
        and QOLAssessment.result is not null
      sort by Global.EarliestOf(relevantDatetime, relevantPeriod)
  )
  where AUASIAssessment.result is not null
    and LastQOLOnDate.result is not null
  return Tuple {
    assessmentDatetime: Global.EarliestOf ( AUASIAssessment.relevantDatetime, AUASIAssessment.relevantPeriod ),
    result: ( AUASIAssessment.result as Integer ) + ( LastQOLOnDate.result as Integer )
  } USSAssessment
    with First([("Diagnosis: Benign prostatic hyperplasia with lower urinary tract symptoms" using "Benign prostatic hyperplasia with lower urinary tract symptoms (ICD10CM Code N40.1)")] NewBPHDiagnosis
    where NewBPHDiagnosis.prevalencePeriod starts during Interval[start of Measurement Period - 6 months, 
    end of Measurement Period]
    sort by start of prevalencePeriod
) InitialBPHDiagnosis
      such that months between start of InitialBPHDiagnosis.prevalencePeriod and USSAssessment.assessmentDatetime in Interval[6, 12]
    sort by assessmentDatetime
) FollowUpUSSAssessment
      such that BMIExam.result >= 40 'kg/m2'
        and Global.EarliestOf(BMIExam.relevantDatetime, BMIExam.relevantPeriod)during Measurement Period
        and Global.EarliestOf(BMIExam.relevantDatetime, BMIExam.relevantPeriod)on or before FollowUpUSSAssessment.assessmentDatetime
    return Global.EarliestOf(BMIExam.relevantDatetime, BMIExam.relevantPeriod)
) )
=============================================================================================================================================================================
Numerator:
( from
  First([("Assessment, Performed: International Prostate Symptom Score [IPSS]" using "International Prostate Symptom Score [IPSS] (LOINC Code 80976-4)")] IPSSAssessment
  where IPSSAssessment.result is not null
  return {
    assessmentDatetime: Global.EarliestOf ( IPSSAssessment.relevantDatetime, IPSSAssessment.relevantPeriod ),
    result: IPSSAssessment.result as Integer
  }
  union [("Assessment, Performed: American Urological Association Symptom Index [AUASI]" using "American Urological Association Symptom Index [AUASI] (LOINC Code 80883-2)")] AUASIAssessment
  let LastQOLOnDate: Last([("Assessment, Performed: If you were to spend the rest of your life with your urinary condition just the way it is now, how would you feel about that [IPSS]" using "If you were to spend the rest of your life with your urinary condition just the way it is now, how would you feel about that [IPSS] (LOINC Code 81090-3)")] QOLAssessment
      where Global.EarliestOf(QOLAssessment.relevantDatetime, QOLAssessment.relevantPeriod)same day as Global.EarliestOf(AUASIAssessment.relevantDatetime, AUASIAssessment.relevantPeriod)
        and QOLAssessment.result is not null
      sort by Global.EarliestOf(relevantDatetime, relevantPeriod)
  )
  where AUASIAssessment.result is not null
    and LastQOLOnDate.result is not null
  return Tuple {
    assessmentDatetime: Global.EarliestOf ( AUASIAssessment.relevantDatetime, AUASIAssessment.relevantPeriod ),
    result: ( AUASIAssessment.result as Integer ) + ( LastQOLOnDate.result as Integer )
  } USSAssessment
    with First([("Diagnosis: Benign prostatic hyperplasia with lower urinary tract symptoms" using "Benign prostatic hyperplasia with lower urinary tract symptoms (ICD10CM Code N40.1)")] NewBPHDiagnosis
    where NewBPHDiagnosis.prevalencePeriod starts during Interval[start of Measurement Period - 6 months, 
    end of Measurement Period]
    sort by start of prevalencePeriod
) InitialBPHDiagnosis
      such that USSAssessment.assessmentDatetime 1 month or less on or after day of start of InitialBPHDiagnosis.prevalencePeriod
    sort by assessmentDatetime
) FirstUSSAssessment,
  Last([("Assessment, Performed: International Prostate Symptom Score [IPSS]" using "International Prostate Symptom Score [IPSS] (LOINC Code 80976-4)")] IPSSAssessment
  where IPSSAssessment.result is not null
  return {
    assessmentDatetime: Global.EarliestOf ( IPSSAssessment.relevantDatetime, IPSSAssessment.relevantPeriod ),
    result: IPSSAssessment.result as Integer
  }
  union [("Assessment, Performed: American Urological Association Symptom Index [AUASI]" using "American Urological Association Symptom Index [AUASI] (LOINC Code 80883-2)")] AUASIAssessment
  let LastQOLOnDate: Last([("Assessment, Performed: If you were to spend the rest of your life with your urinary condition just the way it is now, how would you feel about that [IPSS]" using "If you were to spend the rest of your life with your urinary condition just the way it is now, how would you feel about that [IPSS] (LOINC Code 81090-3)")] QOLAssessment
      where Global.EarliestOf(QOLAssessment.relevantDatetime, QOLAssessment.relevantPeriod)same day as Global.EarliestOf(AUASIAssessment.relevantDatetime, AUASIAssessment.relevantPeriod)
        and QOLAssessment.result is not null
      sort by Global.EarliestOf(relevantDatetime, relevantPeriod)
  )
  where AUASIAssessment.result is not null
    and LastQOLOnDate.result is not null
  return Tuple {
    assessmentDatetime: Global.EarliestOf ( AUASIAssessment.relevantDatetime, AUASIAssessment.relevantPeriod ),
    result: ( AUASIAssessment.result as Integer ) + ( LastQOLOnDate.result as Integer )
  } USSAssessment
    with First([("Diagnosis: Benign prostatic hyperplasia with lower urinary tract symptoms" using "Benign prostatic hyperplasia with lower urinary tract symptoms (ICD10CM Code N40.1)")] NewBPHDiagnosis
    where NewBPHDiagnosis.prevalencePeriod starts during Interval[start of Measurement Period - 6 months, 
    end of Measurement Period]
    sort by start of prevalencePeriod
) InitialBPHDiagnosis
      such that months between start of InitialBPHDiagnosis.prevalencePeriod and USSAssessment.assessmentDatetime in Interval[6, 12]
    sort by assessmentDatetime
) FollowUpUSSAssessment
  let USSChange: ( FirstUSSAssessment.result as Integer ) - ( FollowUpUSSAssessment.result as Integer )
  return USSChange USSImprovement
    where USSImprovement >= 3
) is not null
=============================================================================================================================================================================
Numerator Exclusions:
None
=============================================================================================================================================================================
Denominator Exceptions:
None
=============================================================================================================================================================================
Stratification:
None
