=============================================================================================================================================================================
Initial Population:
AgeInYearsAt(date from 
  end of Measurement Period
)in Interval[3, 17]
  and exists ( ( ["Encounter, Performed: Office Visit" using "Office Visit (2.16.840.1.113883.3.464.1003.101.12.1001)"]
  union ["Encounter, Performed: Preventive Care Services Individual Counseling" using "Preventive Care Services Individual Counseling (2.16.840.1.113883.3.464.1003.101.12.1026)"]
  union ["Encounter, Performed: Preventive Care, Established Office Visit, 0 to 17" using "Preventive Care, Established Office Visit, 0 to 17 (2.16.840.1.113883.3.464.1003.101.12.1024)"]
  union ["Encounter, Performed: Preventive Care Services, Initial Office Visit, 0 to 17" using "Preventive Care Services, Initial Office Visit, 0 to 17 (2.16.840.1.113883.3.464.1003.101.12.1022)"]
  union ["Encounter, Performed: Preventive Care Services Group Counseling" using "Preventive Care Services Group Counseling (2.16.840.1.113883.3.464.1003.101.12.1027)"]
  union ["Encounter, Performed: Home Healthcare Services" using "Home Healthcare Services (2.16.840.1.113883.3.464.1003.101.12.1016)"]
  union ["Encounter, Performed: Telephone Visits" using "Telephone Visits (2.16.840.1.113883.3.464.1003.101.12.1080)"] ) ValidEncounters
  where ValidEncounters.relevantPeriod during day of Measurement Period )
=============================================================================================================================================================================
Denominator:
AgeInYearsAt(date from 
  end of Measurement Period
)in Interval[3, 17]
  and exists ( ( ["Encounter, Performed: Office Visit" using "Office Visit (2.16.840.1.113883.3.464.1003.101.12.1001)"]
  union ["Encounter, Performed: Preventive Care Services Individual Counseling" using "Preventive Care Services Individual Counseling (2.16.840.1.113883.3.464.1003.101.12.1026)"]
  union ["Encounter, Performed: Preventive Care, Established Office Visit, 0 to 17" using "Preventive Care, Established Office Visit, 0 to 17 (2.16.840.1.113883.3.464.1003.101.12.1024)"]
  union ["Encounter, Performed: Preventive Care Services, Initial Office Visit, 0 to 17" using "Preventive Care Services, Initial Office Visit, 0 to 17 (2.16.840.1.113883.3.464.1003.101.12.1022)"]
  union ["Encounter, Performed: Preventive Care Services Group Counseling" using "Preventive Care Services Group Counseling (2.16.840.1.113883.3.464.1003.101.12.1027)"]
  union ["Encounter, Performed: Home Healthcare Services" using "Home Healthcare Services (2.16.840.1.113883.3.464.1003.101.12.1016)"]
  union ["Encounter, Performed: Telephone Visits" using "Telephone Visits (2.16.840.1.113883.3.464.1003.101.12.1080)"] ) ValidEncounters
  where ValidEncounters.relevantPeriod during day of Measurement Period )
=============================================================================================================================================================================
Denominator Exclusions:
Hospice.exists ( ["Encounter, Performed: Encounter Inpatient" using "Encounter Inpatient (2.16.840.1.113883.3.666.5.307)"] InpatientEncounter
    where ( InpatientEncounter.dischargeDisposition ~ code "Discharge to home for hospice care (procedure)" ("SNOMEDCT Code (428361000124107)")
        or InpatientEncounter.dischargeDisposition ~ code "Discharge to healthcare facility for hospice care (procedure)" ("SNOMEDCT Code (428371000124100)")
    )
      and InpatientEncounter.relevantPeriod ends during day of Measurement Period
)
  or exists ( ["Encounter, Performed: Hospice Encounter" using "Hospice Encounter (2.16.840.1.113883.3.464.1003.1003)"] HospiceEncounter
      where HospiceEncounter.relevantPeriod overlaps Measurement Period
  )
  or exists ( ["Assessment, Performed: Hospice care [Minimum Data Set]" using "Hospice care [Minimum Data Set] (LOINC Code 45755-6)"] HospiceAssessment
      where HospiceAssessment.result ~ code "Yes (qualifier value)" ("SNOMEDCT Code (373066001)")
        and if pointInTime is not null then Interval[pointInTime, pointInTime]
  else if period is not null then period 
  else null as Interval<DateTime> ( HospiceAssessment.relevantDatetime, HospiceAssessment.relevantPeriod ) overlaps Measurement Period
  )
  or exists ( ["Intervention, Order: Hospice Care Ambulatory" using "Hospice Care Ambulatory (2.16.840.1.113883.3.526.3.1584)"] HospiceOrder
      where HospiceOrder.authorDatetime during day of Measurement Period
  )
  or exists ( ["Intervention, Performed: Hospice Care Ambulatory" using "Hospice Care Ambulatory (2.16.840.1.113883.3.526.3.1584)"] HospicePerformed
      where if pointInTime is not null then Interval[pointInTime, pointInTime]
  else if period is not null then period 
  else null as Interval<DateTime> ( HospicePerformed.relevantDatetime, HospicePerformed.relevantPeriod ) overlaps Measurement Period
  )
  or exists ( ["Diagnosis: Pregnancy" using "Pregnancy (2.16.840.1.113883.3.526.3.378)"] Pregnancy
  where Pregnancy.prevalencePeriod overlaps Measurement Period )
=============================================================================================================================================================================
Numerator:
exists ( ["Physical Exam, Performed: BMI percentile" using "BMI percentile (2.16.840.1.113883.3.464.1003.121.12.1012)"] BMIPercentile
  where if pointInTime is not null then Interval[pointInTime, pointInTime]
  else if period is not null then period 
  else null as Interval<DateTime> ( BMIPercentile.relevantDatetime, BMIPercentile.relevantPeriod ) during day of Measurement Period
    and BMIPercentile.result is not null )
  and exists ( ["Physical Exam, Performed: Height" using "Height (2.16.840.1.113883.3.464.1003.121.12.1014)"] Height
  where if pointInTime is not null then Interval[pointInTime, pointInTime]
  else if period is not null then period 
  else null as Interval<DateTime> ( Height.relevantDatetime, Height.relevantPeriod ) during day of Measurement Period
    and Height.result is not null )
  and exists ( ["Physical Exam, Performed: Weight" using "Weight (2.16.840.1.113883.3.464.1003.121.12.1015)"] Weight
  where if pointInTime is not null then Interval[pointInTime, pointInTime]
  else if period is not null then period 
  else null as Interval<DateTime> ( Weight.relevantDatetime, Weight.relevantPeriod ) during day of Measurement Period
    and Weight.result is not null )
=============================================================================================================================================================================
Numerator Exclusions:
None
=============================================================================================================================================================================
Denominator Exceptions:
None
=============================================================================================================================================================================
Population Criteria 1:
AgeInYearsAt(date from 
  end of Measurement Period
)in Interval[3, 17]
  and exists ( ( ["Encounter, Performed: Office Visit" using "Office Visit (2.16.840.1.113883.3.464.1003.101.12.1001)"]
  union ["Encounter, Performed: Preventive Care Services Individual Counseling" using "Preventive Care Services Individual Counseling (2.16.840.1.113883.3.464.1003.101.12.1026)"]
  union ["Encounter, Performed: Preventive Care, Established Office Visit, 0 to 17" using "Preventive Care, Established Office Visit, 0 to 17 (2.16.840.1.113883.3.464.1003.101.12.1024)"]
  union ["Encounter, Performed: Preventive Care Services, Initial Office Visit, 0 to 17" using "Preventive Care Services, Initial Office Visit, 0 to 17 (2.16.840.1.113883.3.464.1003.101.12.1022)"]
  union ["Encounter, Performed: Preventive Care Services Group Counseling" using "Preventive Care Services Group Counseling (2.16.840.1.113883.3.464.1003.101.12.1027)"]
  union ["Encounter, Performed: Home Healthcare Services" using "Home Healthcare Services (2.16.840.1.113883.3.464.1003.101.12.1016)"]
  union ["Encounter, Performed: Telephone Visits" using "Telephone Visits (2.16.840.1.113883.3.464.1003.101.12.1080)"] ) ValidEncounters
  where ValidEncounters.relevantPeriod during day of Measurement Period )
=============================================================================================================================================================================
Stratification 1:
AgeInYearsAt(date from 
  end of Measurement Period
)in Interval[3, 11]
=============================================================================================================================================================================
Stratification 2:
AgeInYearsAt(date from 
  end of Measurement Period
)in Interval[12, 17]
