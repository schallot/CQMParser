=============================================================================================================================================================================
Initial Population:
[("Encounter, Performed: Encounter Inpatient" using "Encounter Inpatient (2.16.840.1.113883.3.666.5.307)")] InpatientEncounter
  where InpatientEncounter.relevantPeriod ends during day of Measurement Period
    and AgeInYearsAt(date from start of Encounter Visit
	let ObsVisit: Last([("Encounter, Performed: Observation Services" using "Observation Services (2.16.840.1.113762.1.4.1111.143)")] LastObs
			where LastObs.relevantPeriod ends 1 hour or less on or before start of Visit.relevantPeriod
			sort by 
			end of relevantPeriod
	),
	VisitStart: Coalesce(start of ObsVisit.relevantPeriod, start of Visit.relevantPeriod),
	EDVisit: Last([("Encounter, Performed: Emergency Department Visit" using "Emergency Department Visit (2.16.840.1.113883.3.117.1.7.1.292)")] LastED
			where LastED.relevantPeriod ends 1 hour or less on or before VisitStart
			sort by 
			end of relevantPeriod
	)
	return Interval[Coalesce(start of EDVisit.relevantPeriod, VisitStart), 
	end of Visit.relevantPeriod](InpatientEncounter))>= 18 InpatientEncounter
  with [("Medication, Administered: Hypoglycemics Severe Hypoglycemia" using "Hypoglycemics Severe Hypoglycemia (2.16.840.1.113762.1.4.1196.393)")] HypoglycemicMed
    such that if pointInTime is not null then Interval[pointInTime, pointInTime]
  else if period is not null then period 
  else null as Interval<DateTime> ( HypoglycemicMed.relevantDatetime, HypoglycemicMed.relevantPeriod ) starts during Global.HospitalizationWithObservation ( InpatientEncounter )
=============================================================================================================================================================================
Denominator:
[("Encounter, Performed: Encounter Inpatient" using "Encounter Inpatient (2.16.840.1.113883.3.666.5.307)")] InpatientEncounter
  where InpatientEncounter.relevantPeriod ends during day of Measurement Period
    and AgeInYearsAt(date from start of Encounter Visit
	let ObsVisit: Last([("Encounter, Performed: Observation Services" using "Observation Services (2.16.840.1.113762.1.4.1111.143)")] LastObs
			where LastObs.relevantPeriod ends 1 hour or less on or before start of Visit.relevantPeriod
			sort by 
			end of relevantPeriod
	),
	VisitStart: Coalesce(start of ObsVisit.relevantPeriod, start of Visit.relevantPeriod),
	EDVisit: Last([("Encounter, Performed: Emergency Department Visit" using "Emergency Department Visit (2.16.840.1.113883.3.117.1.7.1.292)")] LastED
			where LastED.relevantPeriod ends 1 hour or less on or before VisitStart
			sort by 
			end of relevantPeriod
	)
	return Interval[Coalesce(start of EDVisit.relevantPeriod, VisitStart), 
	end of Visit.relevantPeriod](InpatientEncounter))>= 18 InpatientEncounter
  with [("Medication, Administered: Hypoglycemics Severe Hypoglycemia" using "Hypoglycemics Severe Hypoglycemia (2.16.840.1.113762.1.4.1196.393)")] HypoglycemicMed
    such that if pointInTime is not null then Interval[pointInTime, pointInTime]
  else if period is not null then period 
  else null as Interval<DateTime> ( HypoglycemicMed.relevantDatetime, HypoglycemicMed.relevantPeriod ) starts during Global.HospitalizationWithObservation ( InpatientEncounter )
=============================================================================================================================================================================
Denominator Exclusions:
None
=============================================================================================================================================================================
Numerator:
[("Encounter, Performed: Encounter Inpatient" using "Encounter Inpatient (2.16.840.1.113883.3.666.5.307)")] InpatientEncounter
  where InpatientEncounter.relevantPeriod ends during day of Measurement Period
    and AgeInYearsAt(date from start of Encounter Visit
	let ObsVisit: Last([("Encounter, Performed: Observation Services" using "Observation Services (2.16.840.1.113762.1.4.1111.143)")] LastObs
			where LastObs.relevantPeriod ends 1 hour or less on or before start of Visit.relevantPeriod
			sort by 
			end of relevantPeriod
	),
	VisitStart: Coalesce(start of ObsVisit.relevantPeriod, start of Visit.relevantPeriod),
	EDVisit: Last([("Encounter, Performed: Emergency Department Visit" using "Emergency Department Visit (2.16.840.1.113883.3.117.1.7.1.292)")] LastED
			where LastED.relevantPeriod ends 1 hour or less on or before VisitStart
			sort by 
			end of relevantPeriod
	)
	return Interval[Coalesce(start of EDVisit.relevantPeriod, VisitStart), 
	end of Visit.relevantPeriod](InpatientEncounter))>= 18 InpatientEncounter
  with [("Medication, Administered: Hypoglycemics Severe Hypoglycemia" using "Hypoglycemics Severe Hypoglycemia (2.16.840.1.113762.1.4.1196.393)")] HypoglycemicMed
    such that if pointInTime is not null then Interval[pointInTime, pointInTime]
  else if period is not null then period 
  else null as Interval<DateTime> ( HypoglycemicMed.relevantDatetime, HypoglycemicMed.relevantPeriod ) starts during Global.HospitalizationWithObservation ( InpatientEncounter ) QualifyingEncounter
  where exists ( [("Laboratory Test, Performed: Glucose Lab Test Mass Per Volume" using "Glucose Lab Test Mass Per Volume (2.16.840.1.113762.1.4.1248.34)")] BloodGlucoseLab1
      with [("Medication, Administered: Hypoglycemics Severe Hypoglycemia" using "Hypoglycemics Severe Hypoglycemia (2.16.840.1.113762.1.4.1196.393)")] HypoglycemicMed
        such that if pointInTime is not null then Interval[pointInTime, pointInTime]
  else if period is not null then period 
  else null as Interval<DateTime> ( HypoglycemicMed.relevantDatetime, HypoglycemicMed.relevantPeriod ) starts 24 hours or less before or on BloodGlucoseLab1.relevantDatetime
          and if pointInTime is not null then Interval[pointInTime, pointInTime]
  else if period is not null then period 
  else null as Interval<DateTime> ( HypoglycemicMed.relevantDatetime, HypoglycemicMed.relevantPeriod ) starts during Encounter Visit
	let ObsVisit: Last([("Encounter, Performed: Observation Services" using "Observation Services (2.16.840.1.113762.1.4.1111.143)")] LastObs
			where LastObs.relevantPeriod ends 1 hour or less on or before start of Visit.relevantPeriod
			sort by 
			end of relevantPeriod
	),
	VisitStart: Coalesce(start of ObsVisit.relevantPeriod, start of Visit.relevantPeriod),
	EDVisit: Last([("Encounter, Performed: Emergency Department Visit" using "Emergency Department Visit (2.16.840.1.113883.3.117.1.7.1.292)")] LastED
			where LastED.relevantPeriod ends 1 hour or less on or before VisitStart
			sort by 
			end of relevantPeriod
	)
	return Interval[Coalesce(start of EDVisit.relevantPeriod, VisitStart), 
	end of Visit.relevantPeriod] ( QualifyingEncounter )
      without [("Laboratory Test, Performed: Glucose Lab Test Mass Per Volume" using "Glucose Lab Test Mass Per Volume (2.16.840.1.113762.1.4.1248.34)")] BloodGlucoseLab2
        such that BloodGlucoseLab2.relevantDatetime during Encounter Visit
	let ObsVisit: Last([("Encounter, Performed: Observation Services" using "Observation Services (2.16.840.1.113762.1.4.1111.143)")] LastObs
			where LastObs.relevantPeriod ends 1 hour or less on or before start of Visit.relevantPeriod
			sort by 
			end of relevantPeriod
	),
	VisitStart: Coalesce(start of ObsVisit.relevantPeriod, start of Visit.relevantPeriod),
	EDVisit: Last([("Encounter, Performed: Emergency Department Visit" using "Emergency Department Visit (2.16.840.1.113883.3.117.1.7.1.292)")] LastED
			where LastED.relevantPeriod ends 1 hour or less on or before VisitStart
			sort by 
			end of relevantPeriod
	)
	return Interval[Coalesce(start of EDVisit.relevantPeriod, VisitStart), 
	end of Visit.relevantPeriod] ( QualifyingEncounter )
          and BloodGlucoseLab2.relevantDatetime 5 minutes or less after BloodGlucoseLab1.relevantDatetime
          and BloodGlucoseLab2.result > 80 'mg/dL'
      where BloodGlucoseLab1.relevantDatetime during Encounter Visit
	let ObsVisit: Last([("Encounter, Performed: Observation Services" using "Observation Services (2.16.840.1.113762.1.4.1111.143)")] LastObs
			where LastObs.relevantPeriod ends 1 hour or less on or before start of Visit.relevantPeriod
			sort by 
			end of relevantPeriod
	),
	VisitStart: Coalesce(start of ObsVisit.relevantPeriod, start of Visit.relevantPeriod),
	EDVisit: Last([("Encounter, Performed: Emergency Department Visit" using "Emergency Department Visit (2.16.840.1.113883.3.117.1.7.1.292)")] LastED
			where LastED.relevantPeriod ends 1 hour or less on or before VisitStart
			sort by 
			end of relevantPeriod
	)
	return Interval[Coalesce(start of EDVisit.relevantPeriod, VisitStart), 
	end of Visit.relevantPeriod] ( QualifyingEncounter )
        and BloodGlucoseLab1.result < 40 'mg/dL'
  )
=============================================================================================================================================================================
Numerator Exclusions:
None
=============================================================================================================================================================================
Denominator Exceptions:
None
=============================================================================================================================================================================
Stratification:
None
