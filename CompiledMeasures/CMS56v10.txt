=============================================================================================================================================================================
Initial Population:
exists ( ( [("Encounter, Performed: Outpatient Consultation" using "Outpatient Consultation (2.16.840.1.113883.3.464.1003.101.12.1008)")]
	    union [("Encounter, Performed: Office Visit" using "Office Visit (2.16.840.1.113883.3.464.1003.101.12.1001)")]
	    union [("Encounter, Performed: Postoperative follow-up visit, normally included in the surgical package, to indicate that an evaluation and management service was performed during a postoperative period for a reason(s) related to the original procedure" using "Postoperative follow-up visit, normally included in the surgical package, to indicate that an evaluation and management service was performed during a postoperative period for a reason(s) related to the original procedure (CPT Code 99024)")]
	    union [("Encounter, Performed: Telephone Visits" using "Telephone Visits (2.16.840.1.113883.3.464.1003.101.12.1080)")]
	    union [("Encounter, Performed: Online Assessments" using "Online Assessments (2.16.840.1.113883.3.464.1003.101.12.1089)")] ) ValidEncounters
	    where ValidEncounters.relevantPeriod during Measurement Period
	)
	  and exists ( [("Procedure, Performed: Primary THA Procedure" using "Primary THA Procedure (2.16.840.1.113883.3.464.1003.198.12.1006)")] THAProcedure
	  where Global.NormalizeInterval ( THAProcedure.relevantDatetime, THAProcedure.relevantPeriod ) starts 12 months or less on or before start of Measurement Period )
	  and exists ( [("Patient Characteristic Birthdate: Birth date" using "Birth date (LOINC Code 21112-8)")] BirthDate
	      where Global.CalendarAgeInYearsAt ( BirthDate.birthDatetime, start of Measurement Period ) >= 19
	  )
=============================================================================================================================================================================
Denominator:
exists ( ( [("Encounter, Performed: Outpatient Consultation" using "Outpatient Consultation (2.16.840.1.113883.3.464.1003.101.12.1008)")]
	    union [("Encounter, Performed: Office Visit" using "Office Visit (2.16.840.1.113883.3.464.1003.101.12.1001)")]
	    union [("Encounter, Performed: Postoperative follow-up visit, normally included in the surgical package, to indicate that an evaluation and management service was performed during a postoperative period for a reason(s) related to the original procedure" using "Postoperative follow-up visit, normally included in the surgical package, to indicate that an evaluation and management service was performed during a postoperative period for a reason(s) related to the original procedure (CPT Code 99024)")]
	    union [("Encounter, Performed: Telephone Visits" using "Telephone Visits (2.16.840.1.113883.3.464.1003.101.12.1080)")]
	    union [("Encounter, Performed: Online Assessments" using "Online Assessments (2.16.840.1.113883.3.464.1003.101.12.1089)")] ) ValidEncounters
	    where ValidEncounters.relevantPeriod during Measurement Period
	)
	  and exists ( [("Procedure, Performed: Primary THA Procedure" using "Primary THA Procedure (2.16.840.1.113883.3.464.1003.198.12.1006)")] THAProcedure
	  where Global.NormalizeInterval ( THAProcedure.relevantDatetime, THAProcedure.relevantPeriod ) starts 12 months or less on or before start of Measurement Period )
	  and exists ( [("Patient Characteristic Birthdate: Birth date" using "Birth date (LOINC Code 21112-8)")] BirthDate
	      where Global.CalendarAgeInYearsAt ( BirthDate.birthDatetime, start of Measurement Period ) >= 19
	  )
=============================================================================================================================================================================
Denominator Exclusions:
Hospice.exists ( [("Encounter, Performed: Encounter Inpatient" using "Encounter Inpatient (2.16.840.1.113883.3.666.5.307)")] DischargeHospice
	    where ( DischargeHospice.dischargeDisposition ~ (code "Discharge to home for hospice care (procedure)" ("SNOMEDCT Code (428361000124107)"))
	        or DischargeHospice.dischargeDisposition ~ (code "Discharge to healthcare facility for hospice care (procedure)" ("SNOMEDCT Code (428371000124100)"))
	    )
	      and DischargeHospice.relevantPeriod ends during Measurement Period
	)
	  or exists ( [("Intervention, Order: Hospice care ambulatory" using "Hospice care ambulatory (2.16.840.1.113762.1.4.1108.15)")] HospiceOrder
	      where HospiceOrder.authorDatetime during Measurement Period
	  )
	  or exists ( [("Intervention, Performed: Hospice care ambulatory" using "Hospice care ambulatory (2.16.840.1.113762.1.4.1108.15)")] HospicePerformed
	      where Global.NormalizeInterval ( HospicePerformed.relevantDatetime, HospicePerformed.relevantPeriod ) overlaps Measurement Period
	  )
	  or exists ( [("Procedure, Performed: Primary THA Procedure" using "Primary THA Procedure (2.16.840.1.113883.3.464.1003.198.12.1006)")] THAProcedure
	  where Global.NormalizeInterval ( THAProcedure.relevantDatetime, THAProcedure.relevantPeriod ) starts 12 months or less on or before start of Measurement Period THAProcedure
	    where Count([("Diagnosis: Fracture - Lower Body" using "Fracture - Lower Body (2.16.840.1.113883.3.464.1003.113.12.1037)")] LowerBodyFracture
	        where LowerBodyFracture.prevalencePeriod starts less than 1 day on or before start of THAProcedure.relevantPeriod
	    )>= 2
	)
	  or exists ( [("Diagnosis: Severe dementia (disorder)" using "Severe dementia (disorder) (SNOMEDCT Code 428351000124105)")] Dementia
	    where Dementia.prevalencePeriod overlaps Measurement Period
	)
=============================================================================================================================================================================
Numerator:
( exists ( [("Procedure, Performed: Primary THA Procedure" using "Primary THA Procedure (2.16.840.1.113883.3.464.1003.198.12.1006)")] THAProcedure
	  where Global.NormalizeInterval ( THAProcedure.relevantDatetime, THAProcedure.relevantPeriod ) starts 12 months or less on or before start of Measurement Period TotalHip
	    with from
	  [("Assessment, Performed: Quality of life score [HOOS]" using "Quality of life score [HOOS] (LOINC Code 72093-8)")] HOOSLifeQuality,
	  [("Assessment, Performed: Sport-recreation score [HOOS]" using "Sport-recreation score [HOOS] (LOINC Code 72094-6)")] HOOSSport,
	  [("Assessment, Performed: Activities of daily living score [HOOS]" using "Activities of daily living score [HOOS] (LOINC Code 72095-3)")] HOOSActivityScore,
	  [("Assessment, Performed: Symptoms score [HOOS]" using "Symptoms score [HOOS] (LOINC Code 72096-1)")] HOOSSymptoms,
	  [("Assessment, Performed: Pain score [HOOS]" using "Pain score [HOOS] (LOINC Code 72097-9)")] HOOSPain
	  let HOOSLifeQualityTime: start of Global.NormalizeInterval ( HOOSLifeQuality.relevantDatetime, HOOSLifeQuality.relevantPeriod ),
	  HOOSSportTime: start of Global.NormalizeInterval ( HOOSSport.relevantDatetime, HOOSSport.relevantPeriod ),
	  HOOSActivityScoreTime: start of Global.NormalizeInterval ( HOOSActivityScore.relevantDatetime, HOOSActivityScore.relevantPeriod ),
	  HOOSSymptomsTime: start of Global.NormalizeInterval ( HOOSSymptoms.relevantDatetime, HOOSSymptoms.relevantPeriod ),
	  HOOSPainTime: start of Global.NormalizeInterval ( HOOSPain.relevantDatetime, HOOSPain.relevantPeriod )
	  where HOOSLifeQualityTime same day as HOOSSportTime
	    and HOOSSport.result is not null
	    and HOOSLifeQualityTime same day as HOOSActivityScoreTime
	    and HOOSActivityScore.result is not null
	    and HOOSLifeQualityTime same day as HOOSSymptomsTime
	    and HOOSSymptoms.result is not null
	    and HOOSLifeQualityTime same day as HOOSPainTime
	    and HOOSPain.result is not null
	    and HOOSLifeQuality.result is not null
	  return Max({ HOOSLifeQualityTime, HOOSSportTime, HOOSActivityScoreTime, HOOSSymptomsTime, HOOSPainTime }) InitialHipAssessmentHOOS
	      such that TotalHip.relevantPeriod starts 90 days or less on or after InitialHipAssessmentHOOS
	    with from
	  [("Assessment, Performed: Quality of life score [HOOS]" using "Quality of life score [HOOS] (LOINC Code 72093-8)")] HOOSLifeQuality,
	  [("Assessment, Performed: Sport-recreation score [HOOS]" using "Sport-recreation score [HOOS] (LOINC Code 72094-6)")] HOOSSport,
	  [("Assessment, Performed: Activities of daily living score [HOOS]" using "Activities of daily living score [HOOS] (LOINC Code 72095-3)")] HOOSActivityScore,
	  [("Assessment, Performed: Symptoms score [HOOS]" using "Symptoms score [HOOS] (LOINC Code 72096-1)")] HOOSSymptoms,
	  [("Assessment, Performed: Pain score [HOOS]" using "Pain score [HOOS] (LOINC Code 72097-9)")] HOOSPain
	  let HOOSLifeQualityTime: start of Global.NormalizeInterval ( HOOSLifeQuality.relevantDatetime, HOOSLifeQuality.relevantPeriod ),
	  HOOSSportTime: start of Global.NormalizeInterval ( HOOSSport.relevantDatetime, HOOSSport.relevantPeriod ),
	  HOOSActivityScoreTime: start of Global.NormalizeInterval ( HOOSActivityScore.relevantDatetime, HOOSActivityScore.relevantPeriod ),
	  HOOSSymptomsTime: start of Global.NormalizeInterval ( HOOSSymptoms.relevantDatetime, HOOSSymptoms.relevantPeriod ),
	  HOOSPainTime: start of Global.NormalizeInterval ( HOOSPain.relevantDatetime, HOOSPain.relevantPeriod )
	  where HOOSLifeQualityTime same day as HOOSSportTime
	    and HOOSSport.result is not null
	    and HOOSLifeQualityTime same day as HOOSActivityScoreTime
	    and HOOSActivityScore.result is not null
	    and HOOSLifeQualityTime same day as HOOSSymptomsTime
	    and HOOSSymptoms.result is not null
	    and HOOSLifeQualityTime same day as HOOSPainTime
	    and HOOSPain.result is not null
	    and HOOSLifeQuality.result is not null
	  return Max({ HOOSLifeQualityTime, HOOSSportTime, HOOSActivityScoreTime, HOOSSymptomsTime, HOOSPainTime }) FollowupHipAssessmentHOOS
	      such that FollowupHipAssessmentHOOS in Interval[
	      end of TotalHip.relevantPeriod + 270 days, 
	      end of TotalHip.relevantPeriod + 365 days]
	) )
	  or ( exists ( [("Procedure, Performed: Primary THA Procedure" using "Primary THA Procedure (2.16.840.1.113883.3.464.1003.198.12.1006)")] THAProcedure
	  where Global.NormalizeInterval ( THAProcedure.relevantDatetime, THAProcedure.relevantPeriod ) starts 12 months or less on or before start of Measurement Period TotalHip
	    with ( [("Assessment, Performed: Total interval score [HOOSJR]" using "Total interval score [HOOSJR] (LOINC Code 82323-7)")] HOOSJr
	    where HOOSJr.result is not null
	) InitialHipAssessment
	      such that TotalHip.relevantPeriod starts 90 days or less on or after InitialHipAssessment.relevantDatetime
	    with ( [("Assessment, Performed: Total interval score [HOOSJR]" using "Total interval score [HOOSJR] (LOINC Code 82323-7)")] HOOSJr
	    where HOOSJr.result is not null
	) FollowupHipAssessment
	      such that FollowupHipAssessment.relevantDatetime in Interval[
	      end of TotalHip.relevantPeriod + 270 days, 
	      end of TotalHip.relevantPeriod + 365 days]
	) )
	  or ( exists ( [("Procedure, Performed: Primary THA Procedure" using "Primary THA Procedure (2.16.840.1.113883.3.464.1003.198.12.1006)")] THAProcedure
	  where Global.NormalizeInterval ( THAProcedure.relevantDatetime, THAProcedure.relevantPeriod ) starts 12 months or less on or before start of Measurement Period TotalHip
	    with from
	  [("Assessment, Performed: PROMIS-10 Global Mental Health (GMH) score T-score" using "PROMIS-10 Global Mental Health (GMH) score T-score (LOINC Code 71969-0)")] PROMIS10MentalScore,
	  [("Assessment, Performed: PROMIS-10 Global Physical Health (GPH) score T-score" using "PROMIS-10 Global Physical Health (GPH) score T-score (LOINC Code 71971-6)")] PROMIS10PhysicalScore
	  let PROMIS10MentalScoreTime: start of Global.NormalizeInterval ( PROMIS10MentalScore.relevantDatetime, PROMIS10MentalScore.relevantPeriod ),
	  PROMIS10PhysicalScoreTime: start of Global.NormalizeInterval ( PROMIS10PhysicalScore.relevantDatetime, PROMIS10PhysicalScore.relevantPeriod )
	  where PROMIS10MentalScoreTime same day as PROMIS10PhysicalScoreTime
	    and PROMIS10PhysicalScore.result is not null
	    and PROMIS10MentalScore.result is not null
	  return Max({ PROMIS10MentalScoreTime, PROMIS10PhysicalScoreTime }) InitialHipAssessmentPROMIS10
	      such that TotalHip.relevantPeriod starts 90 days or less on or after InitialHipAssessmentPROMIS10
	    with from
	  [("Assessment, Performed: PROMIS-10 Global Mental Health (GMH) score T-score" using "PROMIS-10 Global Mental Health (GMH) score T-score (LOINC Code 71969-0)")] PROMIS10MentalScore,
	  [("Assessment, Performed: PROMIS-10 Global Physical Health (GPH) score T-score" using "PROMIS-10 Global Physical Health (GPH) score T-score (LOINC Code 71971-6)")] PROMIS10PhysicalScore
	  let PROMIS10MentalScoreTime: start of Global.NormalizeInterval ( PROMIS10MentalScore.relevantDatetime, PROMIS10MentalScore.relevantPeriod ),
	  PROMIS10PhysicalScoreTime: start of Global.NormalizeInterval ( PROMIS10PhysicalScore.relevantDatetime, PROMIS10PhysicalScore.relevantPeriod )
	  where PROMIS10MentalScoreTime same day as PROMIS10PhysicalScoreTime
	    and PROMIS10PhysicalScore.result is not null
	    and PROMIS10MentalScore.result is not null
	  return Max({ PROMIS10MentalScoreTime, PROMIS10PhysicalScoreTime }) FollowupHipAssessmentPROMIS10
	      such that FollowupHipAssessmentPROMIS10 in Interval[
	      end of TotalHip.relevantPeriod + 270 days, 
	      end of TotalHip.relevantPeriod + 365 days]
	) )
	  or ( exists ( [("Procedure, Performed: Primary THA Procedure" using "Primary THA Procedure (2.16.840.1.113883.3.464.1003.198.12.1006)")] THAProcedure
	  where Global.NormalizeInterval ( THAProcedure.relevantDatetime, THAProcedure.relevantPeriod ) starts 12 months or less on or before start of Measurement Period TotalHip
	    with from
	  [("Assessment, Performed: VR-12 Mental component summary (MCS) score - oblique method T-score" using "VR-12 Mental component summary (MCS) score - oblique method T-score (LOINC Code 72026-8)")] VR12MentalAssessment,
	  [("Assessment, Performed: VR-12 Physical component summary (PCS) score - oblique method T-score" using "VR-12 Physical component summary (PCS) score - oblique method T-score (LOINC Code 72025-0)")] VR12PhysicalAssessment
	  let VR12MentalAssessmentTime: start of Global.NormalizeInterval ( VR12MentalAssessment.relevantDatetime, VR12MentalAssessment.relevantPeriod ),
	  VR12PhysicalAssessmentTime: start of Global.NormalizeInterval ( VR12PhysicalAssessment.relevantDatetime, VR12PhysicalAssessment.relevantPeriod )
	  where VR12MentalAssessmentTime same day as VR12PhysicalAssessmentTime
	    and VR12MentalAssessment.result is not null
	    and VR12PhysicalAssessment.result is not null
	  return Max({ VR12MentalAssessmentTime, VR12PhysicalAssessmentTime }) InitialHipAssessmentOblique
	      such that TotalHip.relevantPeriod starts 90 days or less on or after InitialHipAssessmentOblique
	    with from
	  [("Assessment, Performed: VR-12 Mental component summary (MCS) score - oblique method T-score" using "VR-12 Mental component summary (MCS) score - oblique method T-score (LOINC Code 72026-8)")] VR12MentalAssessment,
	  [("Assessment, Performed: VR-12 Physical component summary (PCS) score - oblique method T-score" using "VR-12 Physical component summary (PCS) score - oblique method T-score (LOINC Code 72025-0)")] VR12PhysicalAssessment
	  let VR12MentalAssessmentTime: start of Global.NormalizeInterval ( VR12MentalAssessment.relevantDatetime, VR12MentalAssessment.relevantPeriod ),
	  VR12PhysicalAssessmentTime: start of Global.NormalizeInterval ( VR12PhysicalAssessment.relevantDatetime, VR12PhysicalAssessment.relevantPeriod )
	  where VR12MentalAssessmentTime same day as VR12PhysicalAssessmentTime
	    and VR12MentalAssessment.result is not null
	    and VR12PhysicalAssessment.result is not null
	  return Max({ VR12MentalAssessmentTime, VR12PhysicalAssessmentTime }) FollowupHipAssessmentOblique
	      such that FollowupHipAssessmentOblique in Interval[
	      end of TotalHip.relevantPeriod + 270 days, 
	      end of TotalHip.relevantPeriod + 365 days]
	) )
	  or ( exists ( [("Procedure, Performed: Primary THA Procedure" using "Primary THA Procedure (2.16.840.1.113883.3.464.1003.198.12.1006)")] THAProcedure
	  where Global.NormalizeInterval ( THAProcedure.relevantDatetime, THAProcedure.relevantPeriod ) starts 12 months or less on or before start of Measurement Period TotalHip
	    with from
	  [("Assessment, Performed: VR-12 Mental component summary (MCS) score - orthogonal method T-score" using "VR-12 Mental component summary (MCS) score - orthogonal method T-score (LOINC Code 72028-4)")] VR12MentalAssessment,
	  [("Assessment, Performed: VR-12 Physical component summary (PCS) score - orthogonal method T-score" using "VR-12 Physical component summary (PCS) score - orthogonal method T-score (LOINC Code 72027-6)")] VR12PhysicalAssessment
	  let VR12MentalAssessmentTime: start of Global.NormalizeInterval ( VR12MentalAssessment.relevantDatetime, VR12MentalAssessment.relevantPeriod ),
	  VR12PhysicalAssessmentTime: start of Global.NormalizeInterval ( VR12PhysicalAssessment.relevantDatetime, VR12PhysicalAssessment.relevantPeriod )
	  where VR12MentalAssessmentTime same day as VR12PhysicalAssessmentTime
	    and VR12MentalAssessment.result is not null
	    and VR12PhysicalAssessment.result is not null
	  return Max({ VR12MentalAssessmentTime, VR12PhysicalAssessmentTime }) InitialHipAssessmentOrthogonal
	      such that TotalHip.relevantPeriod starts 90 days or less on or after InitialHipAssessmentOrthogonal
	    with from
	  [("Assessment, Performed: VR-12 Mental component summary (MCS) score - orthogonal method T-score" using "VR-12 Mental component summary (MCS) score - orthogonal method T-score (LOINC Code 72028-4)")] VR12MentalAssessment,
	  [("Assessment, Performed: VR-12 Physical component summary (PCS) score - orthogonal method T-score" using "VR-12 Physical component summary (PCS) score - orthogonal method T-score (LOINC Code 72027-6)")] VR12PhysicalAssessment
	  let VR12MentalAssessmentTime: start of Global.NormalizeInterval ( VR12MentalAssessment.relevantDatetime, VR12MentalAssessment.relevantPeriod ),
	  VR12PhysicalAssessmentTime: start of Global.NormalizeInterval ( VR12PhysicalAssessment.relevantDatetime, VR12PhysicalAssessment.relevantPeriod )
	  where VR12MentalAssessmentTime same day as VR12PhysicalAssessmentTime
	    and VR12MentalAssessment.result is not null
	    and VR12PhysicalAssessment.result is not null
	  return Max({ VR12MentalAssessmentTime, VR12PhysicalAssessmentTime }) FollowupHipAssessmentOrthogonal
	      such that FollowupHipAssessmentOrthogonal in Interval[
	      end of TotalHip.relevantPeriod + 270 days, 
	      end of TotalHip.relevantPeriod + 365 days]
	) )
=============================================================================================================================================================================
Numerator Exclusions:
None
=============================================================================================================================================================================
Denominator Exceptions:
None
=============================================================================================================================================================================
Stratification:
None
