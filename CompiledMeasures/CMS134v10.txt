=============================================================================================================================================================================
Initial Population:
exists ( [("Patient Characteristic Birthdate: Birth date" using "Birth date (LOINC Code 21112-8)")] BirthDate
	    where years between ToDate(BirthDateTime)and ToDate(AsOf) ( BirthDate.birthDatetime, start of Measurement Period ) in Interval[18, 75 )
	)
	  and exists ( AdultOutpatientEncounters.( [("Encounter, Performed: Office Visit" using "Office Visit (2.16.840.1.113883.3.464.1003.101.12.1001)")]
	  union [("Encounter, Performed: Annual Wellness Visit" using "Annual Wellness Visit (2.16.840.1.113883.3.526.3.1240)")]
	  union [("Encounter, Performed: Preventive Care Services - Established Office Visit, 18 and Up" using "Preventive Care Services - Established Office Visit, 18 and Up (2.16.840.1.113883.3.464.1003.101.12.1025)")]
	  union [("Encounter, Performed: Preventive Care Services-Initial Office Visit, 18 and Up" using "Preventive Care Services-Initial Office Visit, 18 and Up (2.16.840.1.113883.3.464.1003.101.12.1023)")]
	  union [("Encounter, Performed: Home Healthcare Services" using "Home Healthcare Services (2.16.840.1.113883.3.464.1003.101.12.1016)")] ) ValidEncounter
	  where ValidEncounter.relevantPeriod during Measurement Period
	      union [("Encounter, Performed: Telephone Visits" using "Telephone Visits (2.16.840.1.113883.3.464.1003.101.12.1080)")] TelehealthEncounter
	  where TelehealthEncounter.relevantPeriod during Measurement Period
	  )
	  and exists ( [("Diagnosis: Diabetes" using "Diabetes (2.16.840.1.113883.3.464.1003.103.12.1001)")] Diabetes
	      where Diabetes.prevalencePeriod overlaps Measurement Period
	  )
=============================================================================================================================================================================
Denominator:
exists ( [("Patient Characteristic Birthdate: Birth date" using "Birth date (LOINC Code 21112-8)")] BirthDate
	    where years between ToDate(BirthDateTime)and ToDate(AsOf) ( BirthDate.birthDatetime, start of Measurement Period ) in Interval[18, 75 )
	)
	  and exists ( AdultOutpatientEncounters.( [("Encounter, Performed: Office Visit" using "Office Visit (2.16.840.1.113883.3.464.1003.101.12.1001)")]
	  union [("Encounter, Performed: Annual Wellness Visit" using "Annual Wellness Visit (2.16.840.1.113883.3.526.3.1240)")]
	  union [("Encounter, Performed: Preventive Care Services - Established Office Visit, 18 and Up" using "Preventive Care Services - Established Office Visit, 18 and Up (2.16.840.1.113883.3.464.1003.101.12.1025)")]
	  union [("Encounter, Performed: Preventive Care Services-Initial Office Visit, 18 and Up" using "Preventive Care Services-Initial Office Visit, 18 and Up (2.16.840.1.113883.3.464.1003.101.12.1023)")]
	  union [("Encounter, Performed: Home Healthcare Services" using "Home Healthcare Services (2.16.840.1.113883.3.464.1003.101.12.1016)")] ) ValidEncounter
	  where ValidEncounter.relevantPeriod during Measurement Period
	      union [("Encounter, Performed: Telephone Visits" using "Telephone Visits (2.16.840.1.113883.3.464.1003.101.12.1080)")] TelehealthEncounter
	  where TelehealthEncounter.relevantPeriod during Measurement Period
	  )
	  and exists ( [("Diagnosis: Diabetes" using "Diabetes (2.16.840.1.113883.3.464.1003.103.12.1001)")] Diabetes
	      where Diabetes.prevalencePeriod overlaps Measurement Period
	  )
=============================================================================================================================================================================
Denominator Exclusions:
Hospice.exists ( [("Encounter, Performed: Encounter Inpatient" using "Encounter Inpatient (2.16.840.1.113883.3.666.5.307)")] DischargeHospice
	    where ( DischargeHospice.dischargeDisposition ~ (code "Discharge to home for hospice care (procedure)" ("SNOMEDCT Code (428361000124107)"))
	        or DischargeHospice.dischargeDisposition ~ (code "Discharge to healthcare facility for hospice care (procedure)" ("SNOMEDCT Code (428371000124100)"))
	    )
	      and DischargeHospice.relevantPeriod ends during Measurement Period
	)
	  or exists ( [("Intervention, Order: Hospice care ambulatory" using "Hospice care ambulatory (2.16.840.1.113762.1.4.1108.15)")] HospiceOrder
	      where HospiceOrder.authorDatetime during Measurement Period
	  )
	  or exists ( [("Intervention, Performed: Hospice care ambulatory" using "Hospice care ambulatory (2.16.840.1.113762.1.4.1108.15)")] HospicePerformed
	      where if pointInTime is not null then Interval[pointInTime, pointInTime]
	  else if period is not null then period 
	  else null as Interval<DateTime> ( HospicePerformed.relevantDatetime, HospicePerformed.relevantPeriod ) overlaps Measurement Period
	  )
	  or FrailtyLTI.exists ( [("Patient Characteristic Birthdate: Birth date" using "Birth date (LOINC Code 21112-8)")] BirthDate
	    where years between ToDate(BirthDateTime)and ToDate(AsOf) ( BirthDate.birthDatetime, start of Measurement Period ) >= 65
	      and exists ( [("Device, Order: Frailty Device" using "Frailty Device (2.16.840.1.113883.3.464.1003.118.12.1300)")] FrailtyDeviceOrder
	    where FrailtyDeviceOrder.authorDatetime during Measurement Period
	)
	  or exists ( [("Device, Applied: Frailty Device" using "Frailty Device (2.16.840.1.113883.3.464.1003.118.12.1300)")] FrailtyDeviceApplied
	      where if pointInTime is not null then Interval[pointInTime, pointInTime]
	  else if period is not null then period 
	  else null as Interval<DateTime> ( FrailtyDeviceApplied.relevantDatetime, FrailtyDeviceApplied.relevantPeriod ) overlaps Measurement Period
	  )
	  or exists ( [("Diagnosis: Frailty Diagnosis" using "Frailty Diagnosis (2.16.840.1.113883.3.464.1003.113.12.1074)")] FrailtyDiagnosis
	      where FrailtyDiagnosis.prevalencePeriod overlaps Measurement Period
	  )
	  or exists ( [("Encounter, Performed: Frailty Encounter" using "Frailty Encounter (2.16.840.1.113883.3.464.1003.101.12.1088)")] FrailtyEncounter
	      where FrailtyEncounter.relevantPeriod overlaps Measurement Period
	  )
	  or exists ( [("Symptom: Frailty Symptom" using "Frailty Symptom (2.16.840.1.113883.3.464.1003.113.12.1075)")] FrailtySymptom
	      where FrailtySymptom.prevalencePeriod overlaps Measurement Period
	  )
	      and ( exists from
	  ( [("Encounter, Performed: Outpatient" using "Outpatient (2.16.840.1.113883.3.464.1003.101.12.1087)")]
	  union [("Encounter, Performed: Observation" using "Observation (2.16.840.1.113883.3.464.1003.101.12.1086)")]
	  union [("Encounter, Performed: Emergency Department Visit" using "Emergency Department Visit (2.16.840.1.113883.3.464.1003.101.12.1010)")]
	  union [("Encounter, Performed: Nonacute Inpatient" using "Nonacute Inpatient (2.16.840.1.113883.3.464.1003.101.12.1084)")] ) OutpatientEncounter
	  where exists ( OutpatientEncounter.diagnoses Diagnosis
	      where Diagnosis.code in (valueset "Advanced Illness" (2.16.840.1.113883.3.464.1003.110.12.1082))
	  )
	    and OutpatientEncounter.relevantPeriod starts 2 years or less on or before 
	    end of Measurement Period OutpatientEncounter1,
	  ( [("Encounter, Performed: Outpatient" using "Outpatient (2.16.840.1.113883.3.464.1003.101.12.1087)")]
	  union [("Encounter, Performed: Observation" using "Observation (2.16.840.1.113883.3.464.1003.101.12.1086)")]
	  union [("Encounter, Performed: Emergency Department Visit" using "Emergency Department Visit (2.16.840.1.113883.3.464.1003.101.12.1010)")]
	  union [("Encounter, Performed: Nonacute Inpatient" using "Nonacute Inpatient (2.16.840.1.113883.3.464.1003.101.12.1084)")] ) OutpatientEncounter
	  where exists ( OutpatientEncounter.diagnoses Diagnosis
	      where Diagnosis.code in (valueset "Advanced Illness" (2.16.840.1.113883.3.464.1003.110.12.1082))
	  )
	    and OutpatientEncounter.relevantPeriod starts 2 years or less on or before 
	    end of Measurement Period OutpatientEncounter2
	  where OutpatientEncounter2.relevantPeriod ends 1 day or more after day of 
	  end of OutpatientEncounter1.relevantPeriod
	  return OutpatientEncounter1
	          or exists ( [("Encounter, Performed: Acute Inpatient" using "Acute Inpatient (2.16.840.1.113883.3.464.1003.101.12.1083)")] InpatientEncounter
	  where exists ( InpatientEncounter.diagnoses Diagnosis
	      where Diagnosis.code in (valueset "Advanced Illness" (2.16.840.1.113883.3.464.1003.110.12.1082))
	  )
	    and InpatientEncounter.relevantPeriod starts 2 years or less on or before 
	    end of Measurement Period )
	          or exists [("Medication, Active: Dementia Medications" using "Dementia Medications (2.16.840.1.113883.3.464.1003.196.12.1510)")] DementiaMed
		where if pointInTime is not null then Interval[pointInTime, pointInTime]
	  else if period is not null then period 
	  else null as Interval<DateTime>(DementiaMed.relevantDatetime, DementiaMed.relevantPeriod) overlaps Interval[( start of Measurement Period - 1 year ), 
		end of Measurement Period]
	      )
	)
	  or ( exists [("Patient Characteristic Birthdate: Birth date" using "Birth date (LOINC Code 21112-8)")] BirthDate
	      where ( years between ToDate(BirthDateTime)and ToDate(AsOf) ( BirthDate.birthDatetime, start of Measurement Period ) >= 65 )
	        and FrailtyLTI.Max((collapse(collapse(( [("Encounter, Performed: Care Services in Long-Term Residential Facility" using "Care Services in Long-Term Residential Facility (2.16.840.1.113883.3.464.1003.101.12.1014)")]
	  union [("Encounter, Performed: Nursing Facility Visit" using "Nursing Facility Visit (2.16.840.1.113883.3.464.1003.101.12.1012)")] ) LongTermFacilityEncounter
	  where LongTermFacilityEncounter.relevantPeriod overlaps Measurement Period
	  return LongTermFacilityEncounter.relevantPeriod
	    intersect Measurement Period)
	      union from 
collapse(( [("Encounter, Performed: Care Services in Long-Term Residential Facility" using "Care Services in Long-Term Residential Facility (2.16.840.1.113883.3.464.1003.101.12.1014)")]
	  union [("Encounter, Performed: Nursing Facility Visit" using "Nursing Facility Visit (2.16.840.1.113883.3.464.1003.101.12.1012)")] ) LongTermFacilityEncounter
	  where LongTermFacilityEncounter.relevantPeriod overlaps Measurement Period
	  return LongTermFacilityEncounter.relevantPeriod
	    intersect Measurement Period) LTCPeriod1,
collapse(( [("Encounter, Performed: Care Services in Long-Term Residential Facility" using "Care Services in Long-Term Residential Facility (2.16.840.1.113883.3.464.1003.101.12.1014)")]
	  union [("Encounter, Performed: Nursing Facility Visit" using "Nursing Facility Visit (2.16.840.1.113883.3.464.1003.101.12.1012)")] ) LongTermFacilityEncounter
	  where LongTermFacilityEncounter.relevantPeriod overlaps Measurement Period
	  return LongTermFacilityEncounter.relevantPeriod
	    intersect Measurement Period) LTCPeriod2
	where end of LTCPeriod1 within 1 day of start of LTCPeriod2
	return Interval[start of LTCPeriod1, end of LTCPeriod2]
	  ))LTCPeriods
	    return duration in days of LTCPeriods
	) > 90
	        or PalliativeCare.exists ( [("Assessment, Performed: Functional Assessment of Chronic Illness Therapy - Palliative Care Questionnaire (FACIT-Pal)" using "Functional Assessment of Chronic Illness Therapy - Palliative Care Questionnaire (FACIT-Pal) (LOINC Code 71007-9)")] PalliativeAssessment
	    where if pointInTime is not null then Interval[pointInTime, pointInTime]
	  else if period is not null then period 
	  else null as Interval<DateTime>(PalliativeAssessment.relevantDatetime, PalliativeAssessment.relevantPeriod) overlaps Measurement Period
	)
	  or exists ( [("Encounter, Performed: Palliative Care Encounter" using "Palliative Care Encounter (2.16.840.1.113883.3.464.1003.101.12.1090)")] PalliativeEncounter
	      where PalliativeEncounter.relevantPeriod overlaps Measurement Period
	  )
	  or exists ( [("Intervention, Performed: Palliative Care Intervention" using "Palliative Care Intervention (2.16.840.1.113883.3.464.1003.198.12.1135)")] PalliativeIntervention
	      where if pointInTime is not null then Interval[pointInTime, pointInTime]
	  else if period is not null then period 
	  else null as Interval<DateTime>(PalliativeIntervention.relevantDatetime, PalliativeIntervention.relevantPeriod) overlaps Measurement Period
	  )
	  )
=============================================================================================================================================================================
Numerator:
exists ( [("Medication, Active: ACE Inhibitor or ARB or ARNI" using "ACE Inhibitor or ARB or ARNI (2.16.840.1.113883.3.526.3.1139)")] ACEorARBMedication
	  where if pointInTime is not null then Interval[pointInTime, pointInTime]
	  else if period is not null then period 
	  else null as Interval<DateTime> ( ACEorARBMedication.relevantDatetime, ACEorARBMedication.relevantPeriod ) overlaps Measurement Period )
	  or exists ( ( [("Diagnosis: Hypertensive Chronic Kidney Disease" using "Hypertensive Chronic Kidney Disease (2.16.840.1.113883.3.464.1003.109.12.1017)")]
	  union [("Diagnosis: Kidney Failure" using "Kidney Failure (2.16.840.1.113883.3.464.1003.109.12.1028)")]
	  union [("Diagnosis: Glomerulonephritis and Nephrotic Syndrome" using "Glomerulonephritis and Nephrotic Syndrome (2.16.840.1.113883.3.464.1003.109.12.1018)")]
	  union [("Diagnosis: Diabetic Nephropathy" using "Diabetic Nephropathy (2.16.840.1.113883.3.464.1003.109.12.1004)")]
	  union [("Diagnosis: Proteinuria" using "Proteinuria (2.16.840.1.113883.3.526.3.1003)")] ) NephropathyDiagnoses
	  where NephropathyDiagnoses.prevalencePeriod overlaps Measurement Period )
	  or exists ( ( ( ( [("Procedure, Performed: Kidney Transplant" using "Kidney Transplant (2.16.840.1.113883.3.464.1003.109.12.1012)")]
	    union [("Procedure, Performed: Dialysis Services" using "Dialysis Services (2.16.840.1.113883.3.464.1003.109.12.1013)")]
	)
	    union [("Intervention, Performed: Other Services Related to Dialysis" using "Other Services Related to Dialysis (2.16.840.1.113883.3.464.1003.109.12.1015)")]
	  union [("Intervention, Performed: Dialysis Education" using "Dialysis Education (2.16.840.1.113883.3.464.1003.109.12.1016)")]
	    union [("Laboratory Test, Performed: Urine Protein Tests" using "Urine Protein Tests (2.16.840.1.113883.3.464.1003.109.12.1024)")] ProteinUreaResult
	  where ProteinUreaResult.result is not null ) ScreeningNephropathy
	    where if pointInTime is not null then Interval[pointInTime, pointInTime]
	  else if period is not null then period 
	  else null as Interval<DateTime> ( ScreeningNephropathy.relevantDatetime, ScreeningNephropathy.relevantPeriod ) during Measurement Period
	)
	  union ( [("Encounter, Performed: ESRD Monthly Outpatient Services" using "ESRD Monthly Outpatient Services (2.16.840.1.113883.3.464.1003.109.12.1014)")] ESRDEncounter
	      where ESRDEncounter.relevantPeriod during Measurement Period
	  ) )
=============================================================================================================================================================================
Numerator Exclusions:
None
=============================================================================================================================================================================
Denominator Exceptions:
None
=============================================================================================================================================================================
Stratification:
None
